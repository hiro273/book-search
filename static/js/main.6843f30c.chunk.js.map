{"version":3,"sources":["Books/BookRow.tsx","Books/BookSearchItem.tsx","Books/BookSearchDialog.tsx","App.tsx","index.tsx"],"names":["BookRow","props","book","title","author","memo","className","type","value","onChange","e","onMemoChange","id","target","onClick","onDelete","BookSearchItem","description","thumbnail","src","alt","onBookAdd","BookSearchDialog","useState","books","setBooks","setTitle","setAuthor","isSearching","setIsSearching","useEffect","url","maxResults","conditions","push","join","buildSearchUrl","fetch","then","res","json","items","map","item","volumeInfo","authours","authors","imageLinks","smallThumbnail","extractBooks","catch","err","console","log","bookItems","b","index","placeholder","alert","Modal","setAppElement","customStyle","overlay","backgroundColor","content","top","left","right","bottom","marginRight","padding","transform","API_KEY","App","modalIsOpen","setModalIsOpen","storedBooks","localStorage","getItem","JSON","parse","setItem","stringify","bookRows","t","newBooks","filter","handleBookDelete","handleBookMemoChange","isOpen","onRequestClose","style","newBook","Date","now","handleBookAdd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6843f30c.chunk.js","sourcesContent":["import React from 'react'\nimport {BookToRead} from './BookToRead'\n\ntype Props = {\n  book: BookToRead;\n  onMemoChange: (id: number,memo: string) => void\n  onDelete: (id: number) => void\n}\n\nconst BookRow = (props: Props) => {\n  const {title,author,memo} = props.book;\n\n  const handleMemoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onMemoChange(props.book.id,e.target.value)\n  };\n\n  const handleDeleteClick = () => {\n    props.onDelete(props.book.id)\n  };\n\n  return (\n    <div className=\"book-row\">\n      <div className=\"title\" title={title}>{title}</div>\n      <div className=\"authors\" title={author}>{author}</div>\n      <input \n        type=\"text\"\n        className=\"memo\"\n        value={memo}\n        onChange={handleMemoChange}\n      />\n      <div className=\"delete-row\" onClick={handleDeleteClick}>削除</div>\n    </div>\n  )\n}\n\nexport default BookRow","import React from 'react'\nimport {BookDescription} from './BookDescription'\n\ntype BookSearchItemProps = {\n  description: BookDescription;\n  onBookAdd: (book: BookDescription) => void\n}\n\nconst BookSearchItem = (props: BookSearchItemProps) => {\n  const {title,author,thumbnail} = props.description;\n  \n  const handleAddBookClick = () => {\n    props.onBookAdd(props.description)\n  };\n\n  return (\n    <div className=\"book-search-item\">\n      <h2 title={title}>{title}</h2>\n      <div className=\"authors\" title={author}>{author}</div>\n      {thumbnail ? <img src={thumbnail} alt=\"\" /> : null}\n      <div className=\"add-book\" onClick={handleAddBookClick}>\n        <span>+</span>\n      </div>\n    </div>\n  )\n}\n\nexport default BookSearchItem","import React from 'react'\nimport { useState,useEffect } from 'react';\nimport {BookDescription} from './BookDescription'\nimport BookSearchItem from './BookSearchItem';\n\ntype BookSearchDialogProps = {\n  maxResults: number;\n  onBookAdd: (book: BookDescription) => void\n}\n\nfunction buildSearchUrl(title: string,author: string,maxResults: number): string {\n  let url = \"https://www.googleapis.com/books/v1/volumes?q=\";\n  const conditions: string[] = []\n  if (title) {\n    conditions.push(`intitle:${title}`);\n  }\n  if (author) {\n    conditions.push(`inauthor:${author}`)\n  }\n  return url + conditions.join(\"+\") + `&maxResults=${maxResults}`;\n}\n\nfunction extractBooks(json: any): BookDescription[] {\n  const items: any[] = json.items;\n  return items.map((item: any) => {\n    const volumeInfo: any = item.volumeInfo;\n    return {\n      title: volumeInfo.title,\n      author: volumeInfo.authours ? volumeInfo.authors.join(',') : \"\",\n      thumbnail: volumeInfo.imageLinks ? volumeInfo.imageLinks.smallThumbnail : \"\",\n    }\n  })\n}\n\nconst BookSearchDialog = (props: BookSearchDialogProps) => {\n  const [books,setBooks] = useState([] as BookDescription[])\n  const [title,setTitle] = useState('');\n  const [author,setAuthor] = useState('')\n  const [isSearching,setIsSearching] = useState(false)\n\n  useEffect(() => {\n    if (isSearching) {\n      const url = buildSearchUrl(title,author,props.maxResults)\n      fetch(url)\n        .then((res) => {\n          return res.json()\n        })\n        .then((json) => {\n          return extractBooks(json)\n        })\n        .then((books) => {\n          setBooks(books)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n    setIsSearching(false)\n  },[isSearching])\n\n  const handleTitleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value)\n  }\n  const handleAuthorInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAuthor(e.target.value)\n  }\n\n  const handleSearchClick = () => {\n    if (!title && !author) {\n      alert(\"条件を記入してください\");\n      return\n    }\n    setIsSearching(true)\n  }\n\n  const handleBookAdd = (book: BookDescription) => {\n    props.onBookAdd(book)\n  }\n\n  const bookItems = books.map((b,index) => {\n    return (\n      <BookSearchItem\n        description={b}\n        onBookAdd={(b) => handleBookAdd(b)}\n        key={index}\n      />\n    )\n  })\n\n  return (\n    <div className=\"dialog\">\n      <div className=\"operation\">\n        <div className=\"conditions\">\n          <input \n            type=\"text\"\n            onChange={handleTitleInputChange}\n            placeholder=\"タイトル検索\"\n          />\n          <input \n            type=\"text\"\n            onChange={handleAuthorInputChange}\n            placeholder=\"作者名検索\"\n          />\n        </div>\n        <div className=\"button-like\" onClick={handleSearchClick}>検索</div>\n      </div>\n      <div className=\"search-results\">{bookItems}</div>\n    </div>\n  )\n} \n\nexport default BookSearchDialog","import React from 'react';\nimport './App.css'\nimport {BookToRead} from './Books/BookToRead'\nimport BookRow from './Books/BookRow'\nimport { useState,useEffect } from 'react';\nimport Modal from 'react-modal'\nimport BookSearchDialog from './Books/BookSearchDialog';\nimport {BookDescription} from './Books/BookDescription'\n\nModal.setAppElement(\"#root\")\n\nconst customStyle = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\"\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    padding: 0,\n    transform: \"translate(-50%, -50%)\"\n  }\n}\n\nconst API_KEY = \"apikey\"\n\nconst App = () => {\n  const [books,setBooks] = useState([] as BookToRead[]);\n  const [modalIsOpen,setModalIsOpen] = useState(false)\n\n  useEffect(() => {\n    const storedBooks = localStorage.getItem(API_KEY);\n    if (storedBooks) {\n      setBooks(JSON.parse(storedBooks))\n    }\n  },[])\n\n  useEffect(() => {\n    localStorage.setItem(API_KEY,JSON.stringify(books))\n  },[books])\n\n  const handleAddClick = () => {\n    setModalIsOpen(true)\n  }\n  const handleCloseClick = () => {\n    setModalIsOpen(false)\n  }\n  \n  const handleBookDelete = (id: number) => {\n    const newBooks = books.filter(t => t.id !== id)\n    setBooks(newBooks)\n  }\n\n  const handleBookMemoChange = (id: number,memo: string) => {\n    const newBooks = books.map(t => {\n      return t.id === id\n      ? {...t,memo: memo}\n      : t\n    })\n    setBooks(newBooks)\n  }\n\n  const handleBookAdd = (book: BookDescription) => {\n    const newBook: BookToRead = {...book,id: Date.now(),memo: \"\"}\n    const newBooks = [...books,newBook];\n    setBooks(newBooks);\n    setModalIsOpen(false)\n  }\n\n  const bookRows = books.map(t => {\n    return (\n      <BookRow\n        book={t}\n        key={t.id}\n        onDelete={(id) => handleBookDelete(id)}\n        onMemoChange={(id,memo) => handleBookMemoChange(id,memo)}\n      />\n    )\n  })\n  return (\n    <div className=\"A pp\">\n      <section className=\"nav\">\n        <div className=\"button-like\" onClick={handleAddClick} >本を追加</div>\n      </section>\n      <section className=\"main\">{bookRows}</section>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={handleCloseClick}\n        style={customStyle}\n      >\n        <BookSearchDialog maxResults={20} onBookAdd={(b) => handleBookAdd(b)} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}